{
    "sourceFile": "testy.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1699808252393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699868205436,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,124 +1,123 @@\n from flet import *\n import time\n import re\n \n+\n class Title:\n     def __init__(self) -> None:\n-        self.text = Text('The password game *', size=40)\n+        self.text = Text(\"The password game *\", size=40)\n         self.text_body = Row(\n-            [\n-                Container(\n-                    margin=margin.only(top=95),\n-                    content=self.text\n-                )\n-            ],\n+            [Container(margin=margin.only(top=95), content=self.text)],\n             alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER\n+            vertical_alignment=MainAxisAlignment.CENTER,\n         )\n \n-class OfficialView:\n+\n+class OfficialVie\n     def __init__(self) -> None:\n         self.user_inp = TextField(\n             width=440,\n             border_radius=10,\n-            bgcolor='white',\n-            hint_text='Please choose a password',\n-            hint_style=TextStyle(\n-                size=21\n-            ),\n+            bgcolor=\"white\",\n+            hint_text=\"Please choose a password\",\n+            hint_style=TextStyle(size=21),\n             border_width=1.5,\n-            border_color='transperet',\n+            border_color=\"transperet\",\n             focused_border_color=colors.BLACK54,\n-            border=border.all(1.5, 'transperet'),\n-            text_style=TextStyle(\n-                weight=FontWeight.W_500,\n-                size=22\n-            ),\n-            on_change=self.check_rule\n+            border=border.all(1.5, \"transperet\"),\n+            text_style=TextStyle(weight=FontWeight.W_500, size=22),\n+            on_change=self.check_rule,\n         )\n         self.user_inp_body = Row(\n-            [\n-                Container(\n-                    margin=margin.only(top=180),\n-                    content=self.user_inp\n-                )\n-            ],\n+            [Container(margin=margin.only(top=180), content=self.user_inp)],\n             alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER\n+            vertical_alignment=MainAxisAlignment.CENTER,\n         )\n \n         self.cust1 = Container(\n-                                width=380,\n-                                height=37,\n-                                bgcolor='#FF8989',\n-                                opacity=0.6,\n-                            )\n-        self.cust_img_img = Image(\n-                                                    'https://neal.fun/password-game/error.svg',\n-                                                    width=18\n-                                                )\n-        self.cust_img = Container(\n-                                                content=self.cust_img_img\n-                                            )\n+            width=380,\n+            height=37,\n+            bgcolor=\"#FF8989\",\n+            opacity=0.6,\n+        )\n+        self.cust_img_img = Image(\"https://neal.fun/password-game/error.svg\", width=18)\n+        self.cust_img = Container(content=self.cust_img_img)\n \n         self.rule1 = Container(\n             width=380,\n             height=85,\n-            bgcolor='#FFDFDF',\n+            bgcolor=\"#FFDFDF\",\n             border_radius=11,\n-            border=border.all(1.4, 'red'),\n-            content=Column([\n-                Row(\n-                    [\n-                        Stack([\n-                                self.cust1,\n+            border=border.all(1.4, \"red\"),\n+            content=Column(\n+                [\n+                    Row(\n+                        [\n+                            Stack(\n+                                [\n+                                    self.cust1,\n+                                    Container(\n+                                        width=200,\n+                                        height=40,\n+                                        margin=margin.only(left=12),\n+                                        content=Row(\n+                                            [\n+                                                Container(\n+                                                    content=Row(\n+                                                        [\n+                                                            self.cust_img,\n+                                                            Container(\n+                                                                margin=margin.only(\n+                                                                    left=-5, bottom=3\n+                                                                ),\n+                                                                content=Text(\n+                                                                    \"Rule 1\",\n+                                                                    size=20,\n+                                                                    color=colors.BLACK87,\n+                                                                    weight=FontWeight.W_400,\n+                                                                ),\n+                                                            ),\n+                                                        ]\n+                                                    ),\n+                                                )\n+                                            ]\n+                                        ),\n+                                    ),\n+                                ]\n+                            ),\n+                        ],\n+                        alignment=MainAxisAlignment.CENTER,\n+                        vertical_alignment=MainAxisAlignment.CENTER,\n+                    ),\n+                    Row(\n+                        [\n                             Container(\n-                                width=200,\n-                                height=40,\n-                                margin=margin.only(left=12),\n-                                content=Row([\n-                                    Container(\n-                                        content=Row([\n-                                            self.cust_img,\n-                                            Container(\n-                                                margin=margin.only(left=-5, bottom=3),\n-                                                content=Text('Rule 1', size=20, color=colors.BLACK87, weight=FontWeight.W_400)\n-                                            )\n-                                        ]),\n-                                        \n-                                    )\n-                                ])\n+                                margin=margin.only(left=15),\n+                                content=Text(\n+                                    \"Your password must be at least 5 characters.\",\n+                                    size=17,\n+                                    color=colors.BLACK87,\n+                                    weight=FontWeight.NORMAL,\n+                                ),\n                             )\n-                        ]),\n-                        \n-                    ],\n-                    alignment=MainAxisAlignment.CENTER,\n-                    vertical_alignment=MainAxisAlignment.CENTER\n-                ),\n-                Row(\n-                    [\n-                        Container(\n-                            margin=margin.only(left=15),\n-                            content=Text('Your password must be at least 5 characters.', size=17, color=colors.BLACK87, weight=FontWeight.NORMAL)\n-                        )\n-                    ],\n-                    alignment=MainAxisAlignment.START,\n-                    vertical_alignment=MainAxisAlignment.CENTER\n-                )\n-            ])\n+                        ],\n+                        alignment=MainAxisAlignment.START,\n+                        vertical_alignment=MainAxisAlignment.CENTER,\n+                    ),\n+                ]\n+            ),\n         )\n \n         self.rule1_body = Row(\n             [\n                 Container(\n                     margin=margin.only(top=200),\n                     content=self.rule1,\n-                    \n                 )\n             ],\n             alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER\n+            vertical_alignment=MainAxisAlignment.CENTER,\n         )\n \n         self.rule1_body.offset = Offset(0, 0)\n         self.rule1_body.animate_offset = Animation(2000, AnimationCurve.DECELERATE)\n@@ -128,95 +127,104 @@\n \n         self.rule2 = Container(\n             width=380,\n             height=85,\n-            bgcolor='#FFDFDF',\n+            bgcolor=\"#FFDFDF\",\n             border_radius=11,\n-            border=border.all(1.4, 'red'),\n-            content=Column([\n-                Row(\n-                    [\n-                        Stack([\n-                                self.cust1,\n+            border=border.all(1.4, \"red\"),\n+            content=Column(\n+                [\n+                    Row(\n+                        [\n+                            Stack(\n+                                [\n+                                    self.cust1,\n+                                    Container(\n+                                        width=200,\n+                                        height=40,\n+                                        margin=margin.only(left=12),\n+                                        content=Row(\n+                                            [\n+                                                Container(\n+                                                    content=Row(\n+                                                        [\n+                                                            self.cust_img,\n+                                                            Container(\n+                                                                margin=margin.only(\n+                                                                    left=-5, bottom=3\n+                                                                ),\n+                                                                content=Text(\n+                                                                    \"Rule 2\",\n+                                                                    size=20,\n+                                                                    color=colors.BLACK87,\n+                                                                    weight=FontWeight.W_400,\n+                                                                ),\n+                                                            ),\n+                                                        ]\n+                                                    ),\n+                                                )\n+                                            ]\n+                                        ),\n+                                    ),\n+                                ]\n+                            ),\n+                        ],\n+                        alignment=MainAxisAlignment.CENTER,\n+                        vertical_alignment=MainAxisAlignment.CENTER,\n+                    ),\n+                    Row(\n+                        [\n                             Container(\n-                                width=200,\n-                                height=40,\n-                                margin=margin.only(left=12),\n-                                content=Row([\n-                                    Container(\n-                                        content=Row([\n-                                            self.cust_img,\n-                                            Container(\n-                                                margin=margin.only(left=-5, bottom=3),\n-                                                content=Text('Rule 2', size=20, color=colors.BLACK87, weight=FontWeight.W_400)\n-                                            )\n-                                        ]),\n-                                        \n-                                    )\n-                                ])\n+                                margin=margin.only(left=15),\n+                                content=Text(\n+                                    \"Your password must include a number.\",\n+                                    size=17,\n+                                    color=colors.BLACK87,\n+                                    weight=FontWeight.NORMAL,\n+                                ),\n                             )\n-                        ]),\n-                        \n-                    ],\n-                    alignment=MainAxisAlignment.CENTER,\n-                    vertical_alignment=MainAxisAlignment.CENTER\n-                ),\n-                Row(\n-                    [\n-                        Container(\n-                            margin=margin.only(left=15),\n-                            content=Text('Your password must include a number.', size=17, color=colors.BLACK87, weight=FontWeight.NORMAL)\n-                        )\n-                    ],\n-                    alignment=MainAxisAlignment.START,\n-                    vertical_alignment=MainAxisAlignment.CENTER\n-                )\n-            ])\n+                        ],\n+                        alignment=MainAxisAlignment.START,\n+                        vertical_alignment=MainAxisAlignment.CENTER,\n+                    ),\n+                ]\n+            ),\n         )\n \n         self.rule2_body = Row(\n-            [\n-                Container(\n-                    margin=margin.only(top=270),\n-                    content=self.rule2,\n-                    visible=False\n-                )\n-            ],\n+            [Container(margin=margin.only(top=270), content=self.rule2, visible=False)],\n             alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER\n+            vertical_alignment=MainAxisAlignment.CENTER,\n         )\n \n-        self.body_all = Stack([\n-            self.user_inp_body,\n-            self.rule1_body,\n-            self.rule2_body\n-        ])\n-#\n+        self.body_all = Stack([self.user_inp_body, self.rule1_body, self.rule2_body])\n+\n+    #\n     def check_rule(self, e):\n         rule1_give_val = None\n         user_input = self.user_inp.value\n         need_characters = 5\n         self.rule1_body.visible = True\n-        \n+\n         self.check_min_userinp(e)\n         self.check_more_userinp(e)\n         self.check_have_numb(e)\n \n         self.cust_img_img.update()\n         self.cust1.update()\n-        self.rule1.update()    \n+        self.rule1.update()\n         self.rule1_body.update()\n         self.user_inp.update()\n \n     def check_min_userinp(self, e):\n         user_input = self.user_inp.value\n         need_characters = 5\n         self.rule1_body.visible = True\n         if len(user_input) < need_characters:\n-            self.rule1.bgcolor = '#FFDFDF'\n-            self.cust1.bgcolor = '#FF8989'\n-            self.rule1.border=border.all(1.4, 'red')\n-            self.cust_img_img.src = 'https://neal.fun/password-game/error.svg'\n+            self.rule1.bgcolor = \"#FFDFDF\"\n+            self.cust1.bgcolor = \"#FF8989\"\n+            self.rule1.border = border.all(1.4, \"red\")\n+            self.cust_img_img.src = \"https://neal.fun/password-game/error.svg\"\n             if self.rule1_body.offset == Offset(0, 0):\n                 self.rule1_body.visible = True\n                 time.sleep(1)\n                 self.rule1_body.offset = Offset(0, 0.3)\n@@ -227,49 +235,49 @@\n         user_input = self.user_inp.value\n         need_characters = 5\n         self.rule1_body.visible = True\n         if len(user_input) >= need_characters:\n-            self.rule1.bgcolor = '#e3ffe3'\n-            self.cust1.bgcolor = '#aef3ae'\n-            self.rule1.border=border.all(1.4, 'green')\n+            self.rule1.bgcolor = \"#e3ffe3\"\n+            self.cust1.bgcolor = \"#aef3ae\"\n+            self.rule1.border = border.all(1.4, \"green\")\n             self.cust_img_img.src = \"https://neal.fun/password-game/checkmark.svg\"\n             self.rule1_give_val = True\n-#\n+\n+    #\n     def check_have_numb(self, e):\n         user_input = self.user_inp.value\n         if self.rule1_body.offset == Offset(0, 0.3):\n             if self.rule1_give_val == True:\n                 self.rule1_body.offset = Offset(0, 0.55)\n                 self.rule2_body.visible = True\n-                \n+\n                 if any(char.isnumeric() for char in user_input):\n-                    \n                     print(\"В строке есть хотя бы одна цифра.\")\n-                else:    \n+                else:\n                     print(\"В строке нет цифр.\")\n         self.rule1_body.update()\n-        self.rule2_body.update()                   \n+        self.rule2_body.update()\n \n+\n title = Title()\n off_view = OfficialView()\n \n-body = Stack([\n-    title.text_body,\n-    off_view.body_all\n-])\n+body = Stack([title.text_body, off_view.body_all])\n \n+\n def main(page: Page):\n     page.window_width = 900\n     page.window_height = 640\n     page.window_min_width = 900\n     page.window_min_height = 640\n\\ No newline at end of file\n \n     # page.scroll = 'ADAPTIVE'\n-    \n-    page.bgcolor = '#fffae9'\n+\n+    page.bgcolor = \"#fffae9\"\n     page.padding = 0\n \n     page.add(body)\n     page.update()\n \n-if __name__ == '__main__':\n-    app(target=main)   \n+\n+if __name__ == \"__main__\":\n+    app(target=main)\n"
                },
                {
                    "date": 1699868219544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,283 +0,0 @@\n-from flet import *\n-import time\n-import re\n-\n-\n-class Title:\n-    def __init__(self) -> None:\n-        self.text = Text(\"The password game *\", size=40)\n-        self.text_body = Row(\n-            [Container(margin=margin.only(top=95), content=self.text)],\n-            alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER,\n-        )\n-\n-\n-class OfficialVie\n-    def __init__(self) -> None:\n-        self.user_inp = TextField(\n-            width=440,\n-            border_radius=10,\n-            bgcolor=\"white\",\n-            hint_text=\"Please choose a password\",\n-            hint_style=TextStyle(size=21),\n-            border_width=1.5,\n-            border_color=\"transperet\",\n-            focused_border_color=colors.BLACK54,\n-            border=border.all(1.5, \"transperet\"),\n-            text_style=TextStyle(weight=FontWeight.W_500, size=22),\n-            on_change=self.check_rule,\n-        )\n-        self.user_inp_body = Row(\n-            [Container(margin=margin.only(top=180), content=self.user_inp)],\n-            alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER,\n-        )\n-\n-        self.cust1 = Container(\n-            width=380,\n-            height=37,\n-            bgcolor=\"#FF8989\",\n-            opacity=0.6,\n-        )\n-        self.cust_img_img = Image(\"https://neal.fun/password-game/error.svg\", width=18)\n-        self.cust_img = Container(content=self.cust_img_img)\n-\n-        self.rule1 = Container(\n-            width=380,\n-            height=85,\n-            bgcolor=\"#FFDFDF\",\n-            border_radius=11,\n-            border=border.all(1.4, \"red\"),\n-            content=Column(\n-                [\n-                    Row(\n-                        [\n-                            Stack(\n-                                [\n-                                    self.cust1,\n-                                    Container(\n-                                        width=200,\n-                                        height=40,\n-                                        margin=margin.only(left=12),\n-                                        content=Row(\n-                                            [\n-                                                Container(\n-                                                    content=Row(\n-                                                        [\n-                                                            self.cust_img,\n-                                                            Container(\n-                                                                margin=margin.only(\n-                                                                    left=-5, bottom=3\n-                                                                ),\n-                                                                content=Text(\n-                                                                    \"Rule 1\",\n-                                                                    size=20,\n-                                                                    color=colors.BLACK87,\n-                                                                    weight=FontWeight.W_400,\n-                                                                ),\n-                                                            ),\n-                                                        ]\n-                                                    ),\n-                                                )\n-                                            ]\n-                                        ),\n-                                    ),\n-                                ]\n-                            ),\n-                        ],\n-                        alignment=MainAxisAlignment.CENTER,\n-                        vertical_alignment=MainAxisAlignment.CENTER,\n-                    ),\n-                    Row(\n-                        [\n-                            Container(\n-                                margin=margin.only(left=15),\n-                                content=Text(\n-                                    \"Your password must be at least 5 characters.\",\n-                                    size=17,\n-                                    color=colors.BLACK87,\n-                                    weight=FontWeight.NORMAL,\n-                                ),\n-                            )\n-                        ],\n-                        alignment=MainAxisAlignment.START,\n-                        vertical_alignment=MainAxisAlignment.CENTER,\n-                    ),\n-                ]\n-            ),\n-        )\n-\n-        self.rule1_body = Row(\n-            [\n-                Container(\n-                    margin=margin.only(top=200),\n-                    content=self.rule1,\n-                )\n-            ],\n-            alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER,\n-        )\n-\n-        self.rule1_body.offset = Offset(0, 0)\n-        self.rule1_body.animate_offset = Animation(2000, AnimationCurve.DECELERATE)\n-        self.rule1_body.opacity = 0\n-        self.rule1_body.animate_opacity = 300\n-        self.rule1_body.visible = False\n-\n-        self.rule2 = Container(\n-            width=380,\n-            height=85,\n-            bgcolor=\"#FFDFDF\",\n-            border_radius=11,\n-            border=border.all(1.4, \"red\"),\n-            content=Column(\n-                [\n-                    Row(\n-                        [\n-                            Stack(\n-                                [\n-                                    self.cust1,\n-                                    Container(\n-                                        width=200,\n-                                        height=40,\n-                                        margin=margin.only(left=12),\n-                                        content=Row(\n-                                            [\n-                                                Container(\n-                                                    content=Row(\n-                                                        [\n-                                                            self.cust_img,\n-                                                            Container(\n-                                                                margin=margin.only(\n-                                                                    left=-5, bottom=3\n-                                                                ),\n-                                                                content=Text(\n-                                                                    \"Rule 2\",\n-                                                                    size=20,\n-                                                                    color=colors.BLACK87,\n-                                                                    weight=FontWeight.W_400,\n-                                                                ),\n-                                                            ),\n-                                                        ]\n-                                                    ),\n-                                                )\n-                                            ]\n-                                        ),\n-                                    ),\n-                                ]\n-                            ),\n-                        ],\n-                        alignment=MainAxisAlignment.CENTER,\n-                        vertical_alignment=MainAxisAlignment.CENTER,\n-                    ),\n-                    Row(\n-                        [\n-                            Container(\n-                                margin=margin.only(left=15),\n-                                content=Text(\n-                                    \"Your password must include a number.\",\n-                                    size=17,\n-                                    color=colors.BLACK87,\n-                                    weight=FontWeight.NORMAL,\n-                                ),\n-                            )\n-                        ],\n-                        alignment=MainAxisAlignment.START,\n-                        vertical_alignment=MainAxisAlignment.CENTER,\n-                    ),\n-                ]\n-            ),\n-        )\n-\n-        self.rule2_body = Row(\n-            [Container(margin=margin.only(top=270), content=self.rule2, visible=False)],\n-            alignment=MainAxisAlignment.CENTER,\n-            vertical_alignment=MainAxisAlignment.CENTER,\n-        )\n-\n-        self.body_all = Stack([self.user_inp_body, self.rule1_body, self.rule2_body])\n-\n-    #\n-    def check_rule(self, e):\n-        rule1_give_val = None\n-        user_input = self.user_inp.value\n-        need_characters = 5\n-        self.rule1_body.visible = True\n-\n-        self.check_min_userinp(e)\n-        self.check_more_userinp(e)\n-        self.check_have_numb(e)\n-\n-        self.cust_img_img.update()\n-        self.cust1.update()\n-        self.rule1.update()\n-        self.rule1_body.update()\n-        self.user_inp.update()\n-\n-    def check_min_userinp(self, e):\n-        user_input = self.user_inp.value\n-        need_characters = 5\n-        self.rule1_body.visible = True\n-        if len(user_input) < need_characters:\n-            self.rule1.bgcolor = \"#FFDFDF\"\n-            self.cust1.bgcolor = \"#FF8989\"\n-            self.rule1.border = border.all(1.4, \"red\")\n-            self.cust_img_img.src = \"https://neal.fun/password-game/error.svg\"\n-            if self.rule1_body.offset == Offset(0, 0):\n-                self.rule1_body.visible = True\n-                time.sleep(1)\n-                self.rule1_body.offset = Offset(0, 0.3)\n-                self.rule1_body.opacity = 1\n-\n-    def check_more_userinp(self, e):\n-        self.rule1_give_val = None\n-        user_input = self.user_inp.value\n-        need_characters = 5\n-        self.rule1_body.visible = True\n-        if len(user_input) >= need_characters:\n-            self.rule1.bgcolor = \"#e3ffe3\"\n-            self.cust1.bgcolor = \"#aef3ae\"\n-            self.rule1.border = border.all(1.4, \"green\")\n-            self.cust_img_img.src = \"https://neal.fun/password-game/checkmark.svg\"\n-            self.rule1_give_val = True\n-\n-    #\n-    def check_have_numb(self, e):\n-        user_input = self.user_inp.value\n-        if self.rule1_body.offset == Offset(0, 0.3):\n-            if self.rule1_give_val == True:\n-                self.rule1_body.offset = Offset(0, 0.55)\n-                self.rule2_body.visible = True\n-\n-                if any(char.isnumeric() for char in user_input):\n-                    print(\"В строке есть хотя бы одна цифра.\")\n-                else:\n-                    print(\"В строке нет цифр.\")\n-        self.rule1_body.update()\n-        self.rule2_body.update()\n-\n-\n-title = Title()\n-off_view = OfficialView()\n-\n-body = Stack([title.text_body, off_view.body_all])\n-\n-\n-def main(page: Page):\n-    page.window_width = 900\n-    page.window_height = 640\n-    page.window_min_width = 900\n-    page.window_min_height = 640\n-\n-    # page.scroll = 'ADAPTIVE'\n-\n-    page.bgcolor = \"#fffae9\"\n-    page.padding = 0\n-\n-    page.add(body)\n-    page.update()\n-\n-\n-if __name__ == \"__main__\":\n-    app(target=main)\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699905218755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+from flet import *\n+from time import sleep\n+\n+\n+def _view_():\n+    import sqlite3\n+\n+    # for row in data:\n+    #     global res\n+    #     res = row[0]\n+\n+    # for row1 in data:\n+    #     global res1\n+    #     res1 = row1[1]\n+    def checkcreds(username, password):\n+        conection = sqlite3.connect(\"Users.db\")\n+        cursor = conection.cursor()\n+        query = \"SELECT Username,Password FROM Users WHERE Username =? AND Password =?\"\n+        resp = cursor.execute(query, (username, password))\n+        resp = resp.fetchall()\n+        if len(resp) > 0:\n+            return True\n+        return False\n+\n+    def showerror(msg, type=\"username\"):\n+        if type == \"username\":\n+            control = 0\n+        elif type == \"password\":\n+            control = 1\n+        page.controls[0].content.controls[control].content.error_text = msg\n+        page.update()\n+        sleep(2)\n+        page.controls[0].content.controls[control].content.error_text = None\n+        page.update()\n+\n+    def btn_click(e):\n+        if not page.controls[0].content.controls[0].content.value:\n+            showerror(\"Username cannot be empty\")\n+        elif len(page.controls[0].content.controls[0].content.value) > 8:\n+            showerror(\"Username cannot be longer than 8 characters\")\n+        if not page.controls[0].content.controls[1].content.value:\n+            showerror(\"Password cannot be empty\", type=\"password\")\n+        elif len(page.controls[0].content.controls[1].content.value) > 8:\n+            showerror(\"Password cannot be longer than 8 characters\", type=\"password\")\n+        else:\n+            username = page.controls[0].content.controls[0].content.value\n+            pswd = page.controls[0].content.controls[1].content.value\n+            if checkcreds(username, pswd):\n+                print(\"Logged in successfully\")\n+            else:\n+                showerror(\"Invalid username or password\")\n+\n+    page = View(\n+        route=\"/login\",\n+        controls=[\n+            Container(\n+                height=500,\n+                width=450,\n+                bgcolor=colors.with_opacity(opacity=0.1, color=colors.WHITE10),\n+                border_radius=border_radius.all(20),\n+                blur=Blur(200, 200, BlurTileMode.MIRROR),\n+                shadow=BoxShadow(\n+                    200,\n+                    200,\n+                    colors.with_opacity(opacity=0.7, color=colors.TEAL_ACCENT_400),\n+                    Offset(55, 200),\n+                    ShadowBlurStyle.INNER,\n+                ),\n+                content=Stack(\n+                    controls=[\n+                        Container(\n+                            content=TextField(\n+                                label=\"Username\",\n+                                border=\"underline\",\n+                                hint_text=\"Enter your username\",\n+                                bgcolor=colors.with_opacity(\n+                                    opacity=0.3, color=colors.BLACK26\n+                                ),\n+                                filled=True,\n+                            ),\n+                            margin=margin.only(left=80, top=150),\n+                            width=300,\n+                            height=70,\n+                        ),\n+                        Container(\n+                            width=300,\n+                            height=70,\n+                            content=TextField(\n+                                label=\"Password\",\n+                                border=\"underline\",\n+                                hint_text=\"Enter your password\",\n+                                bgcolor=colors.with_opacity(\n+                                    opacity=0.3, color=colors.BLACK26\n+                                ),\n+                                filled=True,\n+                                password=True,\n+                                can_reveal_password=True,\n+                            ),\n+                            margin=margin.only(left=80, top=230),\n+                        ),\n+                        Container(\n+                            content=ElevatedButton(\n+                                text=\"Login\",\n+                                bgcolor=colors.with_opacity(\n+                                    opacity=0.2, color=colors.LIGHT_BLUE_600\n+                                ),\n+                                icon=icons.LOGIN_OUTLINED,\n+                                on_click=btn_click,\n+                            ),\n+                            margin=margin.only(left=160, top=310),\n+                            width=150,\n+                            height=38,\n+                        ),\n+                        Container(\n+                            content=Text(\n+                                \"Forgot Password\",\n+                                italic=True,\n+                                color=colors.CYAN_700,\n+                            ),\n+                            margin=margin.only(left=40, top=440),\n+                        ),\n+                        Container(\n+                            content=Text(\n+                                \"Remember me\",\n+                                italic=True,\n+                                color=colors.CYAN_700,\n+                            ),\n+                            margin=margin.only(left=280, top=440),\n+                        ),\n+                        Container(\n+                            content=Text(\n+                                \"New to the app,\",\n+                                italic=True,\n+                                spans=[\n+                                    TextSpan(\n+                                        text=\"Register here.\",\n+                                        on_click=lambda e: e.page.go(\"/sign-up\"),\n+                                    )\n+                                ],\n+                                font_family=\"Helvetica\",\n+                                color=colors.CYAN_700,\n+                            ),\n+                            margin=margin.only(left=130, top=50),\n+                        ),\n+                    ]\n+                ),\n+            )\n+        ],\n+    )\n+\n+    page.bgcolor = colors.with_opacity(opacity=0.3, color=colors.TEAL_ACCENT_200)\n+    page.padding = padding.only(left=700, top=230)\n+    return page\n"
                },
                {
                    "date": 1699905227947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -149,5 +149,5 @@\n     )\n \n     page.bgcolor = colors.with_opacity(opacity=0.3, color=colors.TEAL_ACCENT_200)\n     page.padding = padding.only(left=700, top=230)\n-    return page\n+    return page\n\\ No newline at end of file\n"
                },
                {
                    "date": 1699905286702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,15 +4,8 @@\n \n def _view_():\n     import sqlite3\n \n-    # for row in data:\n-    #     global res\n-    #     res = row[0]\n-\n-    # for row1 in data:\n-    #     global res1\n-    #     res1 = row1[1]\n     def checkcreds(username, password):\n         conection = sqlite3.connect(\"Users.db\")\n         cursor = conection.cursor()\n         query = \"SELECT Username,Password FROM Users WHERE Username =? AND Password =?\"\n@@ -45,17 +38,40 @@\n         else:\n             username = page.controls[0].content.controls[0].content.value\n             pswd = page.controls[0].content.controls[1].content.value\n             if checkcreds(username, pswd):\n-                print(\"Logged in successfully\")\n+                page.page.go(\"/welcome\")\n             else:\n                 showerror(\"Invalid username or password\")\n \n+    def start_animation():\n+        global running\n+        running = True\n+        run_animation()\n+\n+    def stop_animation():\n+        global running\n+        running = False\n+\n+    def run_animation():\n+        if running == True:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            run_animation()\n+\n+        else:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+\n     page = View(\n         route=\"/login\",\n         controls=[\n             Container(\n-                height=500,\n+                height=530,\n                 width=450,\n                 bgcolor=colors.with_opacity(opacity=0.1, color=colors.WHITE10),\n                 border_radius=border_radius.all(20),\n                 blur=Blur(200, 200, BlurTileMode.MIRROR),\n@@ -75,9 +91,12 @@\n                                 hint_text=\"Enter your username\",\n                                 bgcolor=colors.with_opacity(\n                                     opacity=0.3, color=colors.BLACK26\n                                 ),\n-                                filled=True,\n+                                on_focus=lambda e: start_animation(),\n+                                on_blur=lambda e: stop_animation()\n+                                # animate_rotation=AnimationCurve.EASE_IN_OUT_EXPO\n+                                # filled=True,\n                             ),\n                             margin=margin.only(left=80, top=150),\n                             width=300,\n                             height=70,\n@@ -91,9 +110,9 @@\n                                 hint_text=\"Enter your password\",\n                                 bgcolor=colors.with_opacity(\n                                     opacity=0.3, color=colors.BLACK26\n                                 ),\n-                                filled=True,\n+                                # filled=True,\n                                 password=True,\n                                 can_reveal_password=True,\n                             ),\n                             margin=margin.only(left=80, top=230),\n@@ -112,24 +131,8 @@\n                             height=38,\n                         ),\n                         Container(\n                             content=Text(\n-                                \"Forgot Password\",\n-                                italic=True,\n-                                color=colors.CYAN_700,\n-                            ),\n-                            margin=margin.only(left=40, top=440),\n-                        ),\n-                        Container(\n-                            content=Text(\n-                                \"Remember me\",\n-                                italic=True,\n-                                color=colors.CYAN_700,\n-                            ),\n-                            margin=margin.only(left=280, top=440),\n-                        ),\n-                        Container(\n-                            content=Text(\n                                 \"New to the app,\",\n                                 italic=True,\n                                 spans=[\n                                     TextSpan(\n@@ -139,15 +142,24 @@\n                                 ],\n                                 font_family=\"Helvetica\",\n                                 color=colors.CYAN_700,\n                             ),\n-                            margin=margin.only(left=130, top=50),\n+                            margin=margin.only(left=130, top=420),\n                         ),\n+                        Container(\n+                            content=Icon(\n+                                name=\"lock\",\n+                                scale=Scale(4),\n+                                color=colors.BLACK,\n+                                animate_scale=Animation(900, \"decelerate\"),\n+                            ),\n+                            margin=margin.only(left=215, top=70),\n\\ No newline at end of file\n+                        ),\n                     ]\n                 ),\n             )\n         ],\n     )\n \n-    page.bgcolor = colors.with_opacity(opacity=0.3, color=colors.TEAL_ACCENT_200)\n-    page.padding = padding.only(left=700, top=230)\n-    return page\n+    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n+    page.padding = padding.only(left=150, top=50)\n+    return page\n"
                },
                {
                    "date": 1699905297292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,13 +153,8 @@\n                                 animate_scale=Animation(900, \"decelerate\"),\n                             ),\n                             margin=margin.only(left=215, top=70),\n                         ),\n-                    ]\n-                ),\n-            )\n-        ],\n-    )\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n-    return page\n\\ No newline at end of file\n+    return page\n"
                },
                {
                    "date": 1699905308135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,88 +65,9 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-    page = View(\n-        route=\"/login\",\n-        controls=[\n-            Container(\n-                height=530,\n-                width=450,\n-                bgcolor=colors.with_opacity(opacity=0.1, color=colors.WHITE10),\n-                border_radius=border_radius.all(20),\n-                blur=Blur(200, 200, BlurTileMode.MIRROR),\n-                shadow=BoxShadow(\n-                    200,\n-                    200,\n-                    colors.with_opacity(opacity=0.7, color=colors.TEAL_ACCENT_400),\n-                    Offset(55, 200),\n-                    ShadowBlurStyle.INNER,\n-                ),\n-                content=Stack(\n-                    controls=[\n                         Container(\n-                            content=TextField(\n-                                label=\"Username\",\n-                                border=\"underline\",\n-                                hint_text=\"Enter your username\",\n-                                bgcolor=colors.with_opacity(\n-                                    opacity=0.3, color=colors.BLACK26\n-                                ),\n-                                on_focus=lambda e: start_animation(),\n-                                on_blur=lambda e: stop_animation()\n-                                # animate_rotation=AnimationCurve.EASE_IN_OUT_EXPO\n-                                # filled=True,\n-                            ),\n-                            margin=margin.only(left=80, top=150),\n-                            width=300,\n-                            height=70,\n-                        ),\n-                        Container(\n-                            width=300,\n-                            height=70,\n-                            content=TextField(\n-                                label=\"Password\",\n-                                border=\"underline\",\n-                                hint_text=\"Enter your password\",\n-                                bgcolor=colors.with_opacity(\n-                                    opacity=0.3, color=colors.BLACK26\n-                                ),\n-                                # filled=True,\n-                                password=True,\n-                                can_reveal_password=True,\n-                            ),\n-                            margin=margin.only(left=80, top=230),\n-                        ),\n-                        Container(\n-                            content=ElevatedButton(\n-                                text=\"Login\",\n-                                bgcolor=colors.with_opacity(\n-                                    opacity=0.2, color=colors.LIGHT_BLUE_600\n-                                ),\n-                                icon=icons.LOGIN_OUTLINED,\n-                                on_click=btn_click,\n-                            ),\n-                            margin=margin.only(left=160, top=310),\n-                            width=150,\n-                            height=38,\n-                        ),\n-                        Container(\n-                            content=Text(\n-                                \"New to the app,\",\n-                                italic=True,\n-                                spans=[\n-                                    TextSpan(\n-                                        text=\"Register here.\",\n-                                        on_click=lambda e: e.page.go(\"/sign-up\"),\n-                                    )\n-                                ],\n-                                font_family=\"Helvetica\",\n-                                color=colors.CYAN_700,\n-                            ),\n-                            margin=margin.only(left=130, top=420),\n-                        ),\n-                        Container(\n                             content=Icon(\n                                 name=\"lock\",\n                                 scale=Scale(4),\n                                 color=colors.BLACK,\n"
                },
                {
                    "date": 1699905328645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,48 +2,10 @@\n from time import sleep\n \n \n def _view_():\n-    import sqlite3\n+    \n \n-    def checkcreds(username, password):\n-        conection = sqlite3.connect(\"Users.db\")\n-        cursor = conection.cursor()\n-        query = \"SELECT Username,Password FROM Users WHERE Username =? AND Password =?\"\n-        resp = cursor.execute(query, (username, password))\n-        resp = resp.fetchall()\n-        if len(resp) > 0:\n-            return True\n-        return False\n-\n-    def showerror(msg, type=\"username\"):\n-        if type == \"username\":\n-            control = 0\n-        elif type == \"password\":\n-            control = 1\n-        page.controls[0].content.controls[control].content.error_text = msg\n-        page.update()\n-        sleep(2)\n-        page.controls[0].content.controls[control].content.error_text = None\n-        page.update()\n-\n-    def btn_click(e):\n-        if not page.controls[0].content.controls[0].content.value:\n-            showerror(\"Username cannot be empty\")\n-        elif len(page.controls[0].content.controls[0].content.value) > 8:\n-            showerror(\"Username cannot be longer than 8 characters\")\n-        if not page.controls[0].content.controls[1].content.value:\n-            showerror(\"Password cannot be empty\", type=\"password\")\n-        elif len(page.controls[0].content.controls[1].content.value) > 8:\n-            showerror(\"Password cannot be longer than 8 characters\", type=\"password\")\n-        else:\n-            username = page.controls[0].content.controls[0].content.value\n-            pswd = page.controls[0].content.controls[1].content.value\n-            if checkcreds(username, pswd):\n-                page.page.go(\"/welcome\")\n-            else:\n-                showerror(\"Invalid username or password\")\n-\n     def start_animation():\n         global running\n         running = True\n         run_animation()\n"
                },
                {
                    "date": 1699905336629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from flet import *\n from time import sleep\n \n \n-def _view_():\n+def _view_(page:):\n     \n \n     def start_animation():\n         global running\n"
                },
                {
                    "date": 1699905353011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from flet import *\n from time import sleep\n \n \n-def _view_(page:):\n+def _view_(page:Page):\n     \n \n     def start_animation():\n         global running\n@@ -39,5 +39,7 @@\n                         ),\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n-    return page\n+    \n+    \n+app()\n"
                },
                {
                    "date": 1699905358660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,5 +41,5 @@\n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n     \n     \n-app()\n+app(vi)\n"
                },
                {
                    "date": 1699905364792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+from flet import *\n+from time import sleep\n+\n+\n+def _view_(page:Page):\n+    \n+\n+    def start_animation():\n+        global running\n+        running = True\n+        run_animation()\n+\n+    def stop_animation():\n+        global running\n+        running = False\n+\n+    def run_animation():\n+        if running == True:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            run_animation()\n+\n+        else:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+\n+                        Container(\n+                            content=Icon(\n+                                name=\"lock\",\n+                                scale=Scale(4),\n+                                color=colors.BLACK,\n+                                animate_scale=Animation(900, \"decelerate\"),\n+                            ),\n+                            margin=margin.only(left=215, top=70),\n+                        ),\n+\n+    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n+    page.padding = padding.only(left=150, top=50)\n+    \n+    \n+app(_)\n"
                },
                {
                    "date": 1699905373713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+from flet import *\n+from time import sleep\n+\n+\n+def _view_(page:Page):\n+    \n+\n+    def start_animation():\n+        global running\n+        running = True\n+        run_animation()\n+\n+    def stop_animation():\n+        global running\n+        running = False\n+\n+    def run_animation():\n+        if running == True:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            run_animation()\n+\n+        else:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+\n+            \n+\n+    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n+    page.padding = padding.only(left=150, top=50)\n+    \n+    \n+app(_view_)\n"
                },
                {
                    "date": 1699905383248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,17 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-            \n+            btn1=Container(\n+                            content=Icon(\n+                                name=\"lock\",\n+                                scale=Scale(4),\n+                                color=colors.BLACK,\n+                                animate_scale=Animation(900, \"decelerate\"),\n+                            ),\n+                            margin=margin.only(left=215, top=70),\n+                        ),\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n     \n"
                },
                {
                    "date": 1699905392494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,9 @@\n from flet import *\n from time import sleep\n \n \n-def _view_(page:Page):\n-    \n-\n+def _view_(page: Page):\n     def start_animation():\n         global running\n         running = True\n         run_animation()\n@@ -27,109 +25,21 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-            btn1=Container(\n-                            content=Icon(\n-                                name=\"lock\",\n-                                scale=Scale(4),\n-                                color=colors.BLACK,\n-                                animate_scale=Animation(900, \"decelerate\"),\n-                            ),\n-                            margin=margin.only(left=215, top=70),\n-                        ),\n+            btn1 = (\n+                Container(\n+                    content=(\n+                        name=\"lock\",\n+                        scale=Scale(4),\n+                        color=colors.BLACK,\n+                        animate_scale=Animation(900, \"decelerate\"),\n+                    ),\n+                    margin=margin.only(left=215, top=70),\n+                ),\n+            )\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n-    \n-    \n-app(_view_)\n-from flet import *\n-from time import sleep\n \n \n-def _view_(page:Page):\n-    \n-\n-    def start_animation():\n-        global running\n-        running = True\n-        run_animation()\n-\n-    def stop_animation():\n-        global running\n-        running = False\n-\n-    def run_animation():\n-        if running == True:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            run_animation()\n-\n-        else:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n-\n-                        Container(\n-                            content=Icon(\n-                                name=\"lock\",\n-                                scale=Scale(4),\n-                                color=colors.BLACK,\n-                                animate_scale=Animation(900, \"decelerate\"),\n-                            ),\n-                            margin=margin.only(left=215, top=70),\n-                        ),\n-\n-    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n-    page.padding = padding.only(left=150, top=50)\n-    \n-    \n-app(_)\n-from flet import *\n-from time import sleep\n-\n-\n-def _view_(page:Page):\n-    \n-\n-    def start_animation():\n-        global running\n-        running = True\n-        run_animation()\n-\n-    def stop_animation():\n-        global running\n-        running = False\n-\n-    def run_animation():\n-        if running == True:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            run_animation()\n-\n-        else:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n-\n-                        Container(\n-                            content=Icon(\n-                                name=\"lock\",\n-                                scale=Scale(4),\n-                                color=colors.BLACK,\n-                                animate_scale=Animation(900, \"decelerate\"),\n-                            ),\n-                            margin=margin.only(left=215, top=70),\n-                        ),\n-\n-    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n-    page.padding = padding.only(left=150, top=50)\n-    \n-    \n-app(vi)\n+app(_view_)\n"
                },
                {
                    "date": 1699905400402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,9 @@\n             page.controls[0].content.controls[4].content.update()\n \n             btn1 = (\n                 Container(\n-                    content=(\n-                        name=\"lock\",\n+                    content=ElevatedButton(\n                         scale=Scale(4),\n                         color=colors.BLACK,\n                         animate_scale=Animation(900, \"decelerate\"),\n                     ),\n"
                },
                {
                    "date": 1699905410863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,11 @@\n                     ),\n                     margin=margin.only(left=215, top=70),\n                 ),\n             )\n+            \n+            \n+    page\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n \n"
                },
                {
                    "date": 1699905420471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,22 +25,21 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-            btn1 = (\n-                Container(\n-                    content=ElevatedButton(\n-                        scale=Scale(4),\n-                        color=colors.BLACK,\n-                        animate_scale=Animation(900, \"decelerate\"),\n-                    ),\n-                    margin=margin.only(left=215, top=70),\n+        btn1 = (\n+            Container(\n+                content=ElevatedButton(\n+                    scale=Scale(4),\n+                    color=colors.BLACK,\n+                    animate_scale=Animation(900, \"decelerate\"),\n                 ),\n-            )\n-            \n-            \n-    page\n+                margin=margin.only(left=215, top=70),\n+            ),\n+        )\n \n+    page.add(btn1)\n+\n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n \n \n"
                },
                {
                    "date": 1699905484821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,18 +25,17 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-        btn1 = (\n-            Container(\n-                content=ElevatedButton(\n-                    scale=Scale(4),\n-                    color=colors.BLACK,\n-                    animate_scale=Animation(900, \"decelerate\"),\n-                ),\n-                margin=margin.only(left=215, top=70),\n+    btn1 = (\n+            content=ElevatedButton(\n+                scale=Scale(4),\n+                color=colors.BLACK,\n+                animate_scale=Animation(900, \"decelerate\"),\n             ),\n-        )\n+            margin=margin.only(left=215, top=70),\n+        ),\n+    )\n \n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n"
                },
                {
                    "date": 1699905491865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,18 +25,17 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-    btn1 = (\n+    btn1 = \n             content=ElevatedButton(\n                 scale=Scale(4),\n                 color=colors.BLACK,\n                 animate_scale=Animation(900, \"decelerate\"),\n             ),\n             margin=margin.only(left=215, top=70),\n-        ),\n-    )\n \n+\n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n"
                },
                {
                    "date": 1699905497110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n     btn1 = \n-            content=ElevatedButton(\n+            \n                 scale=Scale(4),\n                 color=colors.BLACK,\n                 animate_scale=Animation(900, \"decelerate\"),\n             ),\n"
                },
                {
                    "date": 1699905506987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,15 +25,14 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-    btn1 = \n+    btn1 =ElevatedButton( \n             \n                 scale=Scale(4),\n                 color=colors.BLACK,\n                 animate_scale=Animation(900, \"decelerate\"),\n             ),\n-            margin=margin.only(left=215, top=70),\n \n \n     page.add(btn1)\n \n"
                },
                {
                    "date": 1699905532502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n from flet import *\n from time import sleep\n \n \n-def _view_(page: Page):\n+def view(page: Page):\n     def start_animation():\n         global running\n         running = True\n         run_animation()\n@@ -25,16 +25,16 @@\n         else:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n-    btn1 =ElevatedButton( \n-            \n-                scale=Scale(4),\n-                color=colors.BLACK,\n-                animate_scale=Animation(900, \"decelerate\"),\n-            ),\n+    btn1 = (\n+        ElevatedButton(\n+            scale=Scale(4),\n+            color=colors.BLACK,\n+            animate_scale=Animation(900, \"decelerate\"),\n+        ),\n+    )\n \n-\n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n"
                },
                {
                    "date": 1699905537585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,5 +39,5 @@\n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=150, top=50)\n \n \n-app(_view_)\n+app(target=view)\n"
                },
                {
                    "date": 1699905547102,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,21 +11,21 @@\n     def stop_animation():\n         global running\n         running = False\n \n-    def run_animation():\n-        if running == True:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n-            sleep(0.9)\n-            run_animation()\n+    # def run_animation():\n+    #     if running == True:\n+    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+    #         page.controls[0].content.controls[4].content.update()\n+    #         sleep(0.9)\n+    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+    #         page.controls[0].content.controls[4].content.update()\n+    #         sleep(0.9)\n+    #         run_animation()\n \n-        else:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-            page.controls[0].content.controls[4].content.update()\n+    #     else:\n+    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+    #         page.controls[0].content.controls[4].content.update()\n \n     btn1 = (\n         ElevatedButton(\n             scale=Scale(4),\n"
                },
                {
                    "date": 1699905558602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,16 @@\n from time import sleep\n \n \n def view(page: Page):\n-    def start_animation():\n-        global running\n-        running = True\n-        run_animation()\n+    # def start_animation():\n+    #     global running\n+    #     running = True\n+    #     run_animation()\n \n-    def stop_animation():\n-        global running\n-        running = False\n+    # def stop_animation():\n+    #     global running\n+    #     running = False\n \n     # def run_animation():\n     #     if running == True:\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n@@ -30,9 +30,9 @@\n         ElevatedButton(\n             scale=Scale(4),\n             color=colors.BLACK,\n             animate_scale=Animation(900, \"decelerate\"),\n-        ),\n+        )\n     )\n \n     page.add(btn1)\n \n"
                },
                {
                    "date": 1699905571781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,19 +25,17 @@\n     #     else:\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n-    btn1 = (\n-        ElevatedButton(\n-            scale=Scale(4),\n-            color=colors.BLACK,\n-            animate_scale=Animation(900, \"decelerate\"),\n-        )\n+    btn1 = ElevatedButton(\n+        scale=Scale(4),\n+        color=colors.BLACK,\n+        animate_scale=Animation(900, \"decelerate\"),\n     )\n \n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n-    page.padding = padding.only(left=150, top=50)\n+    page.padding = padding.only(left=150, top=200)\n \n \n app(target=view)\n"
                },
                {
                    "date": 1699905580586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n     btn1 = ElevatedButton(\n-        scale=Scale(4),\n+        scale=Scale(),\n         color=colors.BLACK,\n         animate_scale=Animation(900, \"decelerate\"),\n     )\n \n"
                },
                {
                    "date": 1699905592226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,16 +26,16 @@\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n     btn1 = ElevatedButton(\n-        scale=Scale(),\n+        scale=Scale(1),\n         color=colors.BLACK,\n         animate_scale=Animation(900, \"decelerate\"),\n     )\n \n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n-    page.padding = padding.only(left=150, top=200)\n+    page.padding = padding.only(left=200, top=200)\n \n \n app(target=view)\n"
                },
                {
                    "date": 1699905602245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     #     else:\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n-    btn1 = ElevatedButton(\n+    btn1 = CElevatedButton(\n         scale=Scale(1),\n         color=colors.BLACK,\n         animate_scale=Animation(900, \"decelerate\"),\n     )\n"
                },
                {
                    "date": 1699905608864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,13 @@\n     #     else:\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n-    btn1 = CElevatedButton(\n+    btn1 = Container(ElevatedButton(\n         scale=Scale(1),\n         color=colors.BLACK,\n         animate_scale=Animation(900, \"decelerate\"),\n-    )\n+    ))\n \n     page.add(btn1)\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n"
                },
                {
                    "date": 1699905633245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,17 +25,19 @@\n     #     else:\n     #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n     #         page.controls[0].content.controls[4].content.update()\n \n-    btn1 = Container(ElevatedButton(\n-        scale=Scale(1),\n-        color=colors.BLACK,\n-        animate_scale=Animation(900, \"decelerate\"),\n-    ))\n+    btn1 = Container(\n+        content=ElevatedButton(\n+            scale=Scale(1),\n+            color=colors.BLACK,\n+            animate_scale=Animation(900, \"decelerate\"),\n+        )\n+    )\n \n-    page.add(btn1)\n-\n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n     page.padding = padding.only(left=200, top=200)\n \n+    page.add(btn1)\n \n+\n app(target=view)\n"
                },
                {
                    "date": 1699905646643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     #         page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n-            scale=Scale(1),\n+            scale=Scale(2),\n             color=colors.BLACK,\n             animate_scale=Animation(900, \"decelerate\"),\n         )\n     )\n"
                },
                {
                    "date": 1699905652044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     #         page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n-            scale=Scale(2),\n+            scale=Scale(1.2),\n             color=colors.BLACK,\n             animate_scale=Animation(900, \"decelerate\"),\n         )\n     )\n"
                },
                {
                    "date": 1699905661301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,21 +11,21 @@\n     # def stop_animation():\n     #     global running\n     #     running = False\n \n-    # def run_animation():\n-    #     if running == True:\n-    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n-    #         page.controls[0].content.controls[4].content.update()\n-    #         sleep(0.9)\n-    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-    #         page.controls[0].content.controls[4].content.update()\n-    #         sleep(0.9)\n-    #         run_animation()\n+    def run_animation():\n+        if running == True:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n+            sleep(0.9)\n+            run_animation()\n \n-    #     else:\n-    #         page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n-    #         page.controls[0].content.controls[4].content.update()\n+        else:\n+            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n             scale=Scale(1.2),\n"
                },
                {
                    "date": 1699905672289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n     #     global running\n     #     running = False\n \n     def run_animation():\n+        global running\n         if running == True:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905682883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n     #     global running\n     #     running = False\n \n     def run_animation():\n-        global running\n+        global running \n+        run\n         if running == True:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905688678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,10 +12,10 @@\n     #     global running\n     #     running = False\n \n     def run_animation():\n-        global running \n-        run\n+        global running\n+        running = True\n         if running == True:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905694587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n from time import sleep\n \n \n def view(page: Page):\n+    running\n     # def start_animation():\n     #     global running\n     #     running = True\n     #     run_animation()\n"
                },
                {
                    "date": 1699905703285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n from time import sleep\n \n \n def view(page: Page):\n-    running\n+    running = None\n     # def start_animation():\n     #     global running\n     #     running = True\n     #     run_animation()\n@@ -15,8 +15,9 @@\n \n     def run_animation():\n         global running\n         running = True\n+        \n         if running == True:\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905717130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,10 @@\n \n     def run_animation():\n         global running\n         running = True\n-        \n         if running == True:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4.95)\n+            btn1scale = transform.Scale(4.95)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n"
                },
                {
                    "date": 1699905725817,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n     def run_animation():\n         global running\n         running = True\n         if running == True:\n-            btn1scale = transform.Scale(4.95)\n-            page.controls[0].content.controls[4].content.update()\n+            btn1.scale = transform.Scale(4.95)\n+            btn1update()\n             sleep(0.9)\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905731468,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,10 +16,10 @@\n     def run_animation():\n         global running\n         running = True\n         if running == True:\n-            btn1.scale = transform.Scale(4.95)\n-            btn1update()\n+            btn1.content.scale = transform.Scale(4.95)\n+            btn1.update()\n             sleep(0.9)\n             page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n"
                },
                {
                    "date": 1699905750084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n         global running\n         running = True\n         if running == True:\n             btn1.content.scale = transform.Scale(4.95)\n-            btn1.update()\n+            btn1.content.update()\n             sleep(0.9)\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            btn1.content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n             run_animation()\n \n"
                },
                {
                    "date": 1699905761027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         if running == True:\n             btn1.content.scale = transform.Scale(4.95)\n             btn1.content.update()\n             sleep(0.9)\n-            btn1.content.scale = transform.Scale(4)\n+            btn1.content.scale = transform.Scale(0.8)\n             page.controls[0].content.controls[4].content.update()\n             sleep(0.9)\n             run_animation()\n \n"
                },
                {
                    "date": 1699905768697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     def run_animation():\n         global running\n         running = True\n         if running == True:\n-            btn1.content.scale = transform.Scale(4.95)\n+            btn1.content.scale = transform.Scale(1)\n             btn1.content.update()\n             sleep(0.9)\n             btn1.content.scale = transform.Scale(0.8)\n             page.controls[0].content.controls[4].content.update()\n"
                },
                {
                    "date": 1699905785089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,13 +16,13 @@\n     def run_animation():\n         global running\n         running = True\n         if running == True:\n-            btn1.content.scale = transform.Scale(1)\n+            btn1.content.scale = transform.Scale(1.2)\n             btn1.content.update()\n             sleep(0.9)\n             btn1.content.scale = transform.Scale(0.8)\n-            page.controls[0].content.controls[4].content.update()\n+            btn1..content.update()\n             sleep(0.9)\n             run_animation()\n \n         else:\n"
                },
                {
                    "date": 1699905796052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,14 +20,14 @@\n             btn1.content.scale = transform.Scale(1.2)\n             btn1.content.update()\n             sleep(0.9)\n             btn1.content.scale = transform.Scale(0.8)\n-            btn1..content.update()\n+            btn1.content.update()\n             sleep(0.9)\n             run_animation()\n \n         else:\n-            page.controls[0].content.controls[4].content.scale = transform.Scale(4)\n+            btnm1content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n"
                },
                {
                    "date": 1699905801510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             sleep(0.9)\n             run_animation()\n \n         else:\n-            btnm1content.scale = transform.Scale(4)\n+            btn1content.scale = transform.Scale(4)\n             page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n"
                },
                {
                    "date": 1699905806665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             sleep(0.9)\n             run_animation()\n \n         else:\n-            btn1content.scale = transform.Scale(4)\n+            btn1.content.scale = transform.Scale(1.2)\n             page.controls[0].content.controls[4].content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n"
                },
                {
                    "date": 1699905813107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n             run_animation()\n \n         else:\n             btn1.content.scale = transform.Scale(1.2)\n-            page.controls[0].content.controls[4].content.update()\n+            btn1..content.update()\n \n     btn1 = Container(\n         content=ElevatedButton(\n             scale=Scale(1.2),\n"
                },
                {
                    "date": 1699905819982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+from flet import *\n+from time import sleep\n+\n+\n+def view(page: Page):\n+    running = None\n+    # def start_animation():\n+    #     global running\n+    #     running = True\n+    #     run_animation()\n+\n+    # def stop_animation():\n+    #     global running\n+    #     running = False\n+\n+    def run_animation():\n+        global running\n+        running = True\n+        if running == True:\n+            btn1.content.scale = transform.Scale(1.2)\n+            btn1.content.update()\n+            sleep(0.9)\n+            btn1.content.scale = transform.Scale(0.8)\n+            btn1.content.update()\n+            sleep(0.9)\n+            run_animation()\n+\n+        else:\n+            btn1.content.scale = transform.Scale(1.2)\n+            btn1.content.update()\n+\n+    btn1 = Container(\n+        content=ElevatedButton(\n+            scale=Scale(1.2),\n+            color=colors.BLACK,\n+            animate_scale=Animation(900, \"decelerate\"),\n+            o\n+        )\n+    )\n+\n+    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n+    page.padding = padding.only(left=200, top=200)\n+\n+    page.add(btn1)\n+\n+\n+app(target=view)\n"
                },
                {
                    "date": 1699905828409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n         content=ElevatedButton(\n             scale=Scale(1.2),\n             color=colors.BLACK,\n             animate_scale=Animation(900, \"decelerate\"),\n-            on_click=\n+            on_h\n         )\n     )\n \n     page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n"
                },
                {
                    "date": 1699951126624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,51 @@\n+from flet import *\n+from time import sleep\n+\n+\n+def view(page: Page):\n+    running = None\n+    # def start_animation():\n+    #     global running\n+    #     running = True\n+    #     run_animation()\n+\n+    # def stop_animation():\n+    #     global running\n+    #     running = False\n+\n+    def run_animation(e):\n+        global running\n+        running = True\n+        if running == True:\n+            btn1.content.scale = transform.Scale(0.8)\n+            btn1.content.update()\n+            sleep(0.9)\n+            # btn1.content.scale = transform.Scale(0.8)\n+            # btn1.content.update()\n+            # sleep(0.9)\n+            run_animation(\"\")\n+\n+        else:\n+            btn1.content.scale = transform.Scale(1.2)\n+            btn1.content.update()\n+\n+    btn1 = Container(\n+        content=ElevatedButton(\n+            scale=Scale(1.2),\n+            color=colors.BLACK,\n+            animate_scale=Animation(900, \"decelerate\"),\n+            on_click=run_animation,\n+        )\n+    )\n+\n+    page.bgcolor = colors.with_opacity(opacity=0.7, color=colors.CYAN_700)\n+    page.padding = padding.only(left=200, top=200)\n+\n+    page.add(btn1)\n+\n+\n+app(target=view)\n+\n+\n+\n+\n"
                }
            ],
            "date": 1699808252393,
            "name": "Commit-0",
            "content": "from flet import *\nimport time\nimport re\n\nclass Title:\n    def __init__(self) -> None:\n        self.text = Text('The password game *', size=40)\n        self.text_body = Row(\n            [\n                Container(\n                    margin=margin.only(top=95),\n                    content=self.text\n                )\n            ],\n            alignment=MainAxisAlignment.CENTER,\n            vertical_alignment=MainAxisAlignment.CENTER\n        )\n\nclass OfficialView:\n    def __init__(self) -> None:\n        self.user_inp = TextField(\n            width=440,\n            border_radius=10,\n            bgcolor='white',\n            hint_text='Please choose a password',\n            hint_style=TextStyle(\n                size=21\n            ),\n            border_width=1.5,\n            border_color='transperet',\n            focused_border_color=colors.BLACK54,\n            border=border.all(1.5, 'transperet'),\n            text_style=TextStyle(\n                weight=FontWeight.W_500,\n                size=22\n            ),\n            on_change=self.check_rule\n        )\n        self.user_inp_body = Row(\n            [\n                Container(\n                    margin=margin.only(top=180),\n                    content=self.user_inp\n                )\n            ],\n            alignment=MainAxisAlignment.CENTER,\n            vertical_alignment=MainAxisAlignment.CENTER\n        )\n\n        self.cust1 = Container(\n                                width=380,\n                                height=37,\n                                bgcolor='#FF8989',\n                                opacity=0.6,\n                            )\n        self.cust_img_img = Image(\n                                                    'https://neal.fun/password-game/error.svg',\n                                                    width=18\n                                                )\n        self.cust_img = Container(\n                                                content=self.cust_img_img\n                                            )\n\n        self.rule1 = Container(\n            width=380,\n            height=85,\n            bgcolor='#FFDFDF',\n            border_radius=11,\n            border=border.all(1.4, 'red'),\n            content=Column([\n                Row(\n                    [\n                        Stack([\n                                self.cust1,\n                            Container(\n                                width=200,\n                                height=40,\n                                margin=margin.only(left=12),\n                                content=Row([\n                                    Container(\n                                        content=Row([\n                                            self.cust_img,\n                                            Container(\n                                                margin=margin.only(left=-5, bottom=3),\n                                                content=Text('Rule 1', size=20, color=colors.BLACK87, weight=FontWeight.W_400)\n                                            )\n                                        ]),\n                                        \n                                    )\n                                ])\n                            )\n                        ]),\n                        \n                    ],\n                    alignment=MainAxisAlignment.CENTER,\n                    vertical_alignment=MainAxisAlignment.CENTER\n                ),\n                Row(\n                    [\n                        Container(\n                            margin=margin.only(left=15),\n                            content=Text('Your password must be at least 5 characters.', size=17, color=colors.BLACK87, weight=FontWeight.NORMAL)\n                        )\n                    ],\n                    alignment=MainAxisAlignment.START,\n                    vertical_alignment=MainAxisAlignment.CENTER\n                )\n            ])\n        )\n\n        self.rule1_body = Row(\n            [\n                Container(\n                    margin=margin.only(top=200),\n                    content=self.rule1,\n                    \n                )\n            ],\n            alignment=MainAxisAlignment.CENTER,\n            vertical_alignment=MainAxisAlignment.CENTER\n        )\n\n        self.rule1_body.offset = Offset(0, 0)\n        self.rule1_body.animate_offset = Animation(2000, AnimationCurve.DECELERATE)\n        self.rule1_body.opacity = 0\n        self.rule1_body.animate_opacity = 300\n        self.rule1_body.visible = False\n\n        self.rule2 = Container(\n            width=380,\n            height=85,\n            bgcolor='#FFDFDF',\n            border_radius=11,\n            border=border.all(1.4, 'red'),\n            content=Column([\n                Row(\n                    [\n                        Stack([\n                                self.cust1,\n                            Container(\n                                width=200,\n                                height=40,\n                                margin=margin.only(left=12),\n                                content=Row([\n                                    Container(\n                                        content=Row([\n                                            self.cust_img,\n                                            Container(\n                                                margin=margin.only(left=-5, bottom=3),\n                                                content=Text('Rule 2', size=20, color=colors.BLACK87, weight=FontWeight.W_400)\n                                            )\n                                        ]),\n                                        \n                                    )\n                                ])\n                            )\n                        ]),\n                        \n                    ],\n                    alignment=MainAxisAlignment.CENTER,\n                    vertical_alignment=MainAxisAlignment.CENTER\n                ),\n                Row(\n                    [\n                        Container(\n                            margin=margin.only(left=15),\n                            content=Text('Your password must include a number.', size=17, color=colors.BLACK87, weight=FontWeight.NORMAL)\n                        )\n                    ],\n                    alignment=MainAxisAlignment.START,\n                    vertical_alignment=MainAxisAlignment.CENTER\n                )\n            ])\n        )\n\n        self.rule2_body = Row(\n            [\n                Container(\n                    margin=margin.only(top=270),\n                    content=self.rule2,\n                    visible=False\n                )\n            ],\n            alignment=MainAxisAlignment.CENTER,\n            vertical_alignment=MainAxisAlignment.CENTER\n        )\n\n        self.body_all = Stack([\n            self.user_inp_body,\n            self.rule1_body,\n            self.rule2_body\n        ])\n#\n    def check_rule(self, e):\n        rule1_give_val = None\n        user_input = self.user_inp.value\n        need_characters = 5\n        self.rule1_body.visible = True\n        \n        self.check_min_userinp(e)\n        self.check_more_userinp(e)\n        self.check_have_numb(e)\n\n        self.cust_img_img.update()\n        self.cust1.update()\n        self.rule1.update()    \n        self.rule1_body.update()\n        self.user_inp.update()\n\n    def check_min_userinp(self, e):\n        user_input = self.user_inp.value\n        need_characters = 5\n        self.rule1_body.visible = True\n        if len(user_input) < need_characters:\n            self.rule1.bgcolor = '#FFDFDF'\n            self.cust1.bgcolor = '#FF8989'\n            self.rule1.border=border.all(1.4, 'red')\n            self.cust_img_img.src = 'https://neal.fun/password-game/error.svg'\n            if self.rule1_body.offset == Offset(0, 0):\n                self.rule1_body.visible = True\n                time.sleep(1)\n                self.rule1_body.offset = Offset(0, 0.3)\n                self.rule1_body.opacity = 1\n\n    def check_more_userinp(self, e):\n        self.rule1_give_val = None\n        user_input = self.user_inp.value\n        need_characters = 5\n        self.rule1_body.visible = True\n        if len(user_input) >= need_characters:\n            self.rule1.bgcolor = '#e3ffe3'\n            self.cust1.bgcolor = '#aef3ae'\n            self.rule1.border=border.all(1.4, 'green')\n            self.cust_img_img.src = \"https://neal.fun/password-game/checkmark.svg\"\n            self.rule1_give_val = True\n#\n    def check_have_numb(self, e):\n        user_input = self.user_inp.value\n        if self.rule1_body.offset == Offset(0, 0.3):\n            if self.rule1_give_val == True:\n                self.rule1_body.offset = Offset(0, 0.55)\n                self.rule2_body.visible = True\n                \n                if any(char.isnumeric() for char in user_input):\n                    \n                    print(\"В строке есть хотя бы одна цифра.\")\n                else:    \n                    print(\"В строке нет цифр.\")\n        self.rule1_body.update()\n        self.rule2_body.update()                   \n\ntitle = Title()\noff_view = OfficialView()\n\nbody = Stack([\n    title.text_body,\n    off_view.body_all\n])\n\ndef main(page: Page):\n    page.window_width = 900\n    page.window_height = 640\n    page.window_min_width = 900\n    page.window_min_height = 640\n\n    # page.scroll = 'ADAPTIVE'\n    \n    page.bgcolor = '#fffae9'\n    page.padding = 0\n\n    page.add(body)\n    page.update()\n\nif __name__ == '__main__':\n    app(target=main)   "
        }
    ]
}