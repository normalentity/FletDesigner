{
    "sourceFile": "FletDesigner/UI/Interactve_manager.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1701446983186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1701511426528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,39 @@\n from ..UI.Properties_Toolbar import PropertiesToolbar\n \n-class IManager():\n+\n+class IManager:\n     detail: PropertiesToolbar = None\n     defualt_properties = {\n-        'width' : 100,\n-        'height' : 100,\n-        'opacity' : 1,\n-        'bg_color' : 'red',\n-    } # properties add them\n+        \"width\": 100,\n+        \"height\": 100,\n+        \"opacity\": 1,\n+        \"bg_color\": \"red\",\n+    }  # properties add them\n \n     def __init__(self) -> None:\n         pass\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n-    def select(self, width = None, heigth=None, opacity= None, defualt_properties = None, name= None):\n+    def select(\n+        self, width=None, heigth=None, opacity=None, defualt_properties=None, name=None\n+    ):\n         if defualt_properties == None:\n             # self.control_name_space,\n             self.detail.control_width.content.value = width\n             # self.color_box,\n\\ No newline at end of file\n             self.detail.control_height.content.value = heigth\n             self.detail.control_opacity.content.value = opacity\n             # self.cover_component,\n         else:\n-            self.detail.control_width.content.value = defualt_properties['width'] # could change this to use controlrefs instead\n-            self.detail.control_height.content.content.value = defualt_properties['height']\n-            self.detail.control_opacity.content.value = defualt_properties['opacity']\n+            \n+            self.detail.control_width.content.value = defualt_properties[\n+                \"width\"\n+            ]  # could change this to use controlrefs instead\n+            self.detail.control_height.content.content.value = defualt_properties[\n+                \"height\"\n+            ]\n+            self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n         self.detail.control_name_space.content.value = name\n-        \n-        self.detail.update()\n+\n+        self.detail.update()\n"
                },
                {
                    "date": 1701511431686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             self.detail.control_height.content.value = heigth\n             self.detail.control_opacity.content.value = opacity\n             # self.cover_component,\n         else:\n-            \n+            self.d\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_height.content.content.value = defualt_properties[\n@@ -35,5 +35,5 @@\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n         self.detail.control_name_space.content.value = name\n \n-        self.detail.update()\n\\ No newline at end of file\n+        self.detail.update()\n"
                },
                {
                    "date": 1701511441101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             self.detail.control_height.content.value = heigth\n             self.detail.control_opacity.content.value = opacity\n             # self.cover_component,\n         else:\n-            self.d\n+            self.detail.control_width\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_height.content.content.value = defualt_properties[\n"
                },
                {
                    "date": 1701511446961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n             self.detail.control_height.content.value = heigth\n             self.detail.control_opacity.content.value = opacity\n             # self.cover_component,\n         else:\n-            self.detail.control_width\n+            \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_height.content.content.value = defualt_properties[\n"
                },
                {
                    "date": 1701511453460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,9 @@\n             \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n+            self.detail.control_width.c\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511458551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.c\n+            self.detail.control_width.content.value=\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511466296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.value=\n+            self.detail.control_width.content.value=defualt_properties[]\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511477177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.value=defualt_properties[]\n+            self.detail.control_width.content.value=defualt_properties[\"wdith\"]\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511484907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,13 +25,13 @@\n             self.detail.control_height.content.value = heigth\n             self.detail.control_opacity.content.value = opacity\n             # self.cover_component,\n         else:\n-            \n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.value=defualt_properties[\"wdith\"]\n+            self.detail.control_width.content.value = defualt_properties[\"width\"]\n+            \n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511490840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_width.content.value = defualt_properties[\"width\"]\n-            \n+            self.detail.c\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511497519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+from ..UI.Properties_Toolbar import PropertiesToolbar\n+\n+\n+class IManager:\n+    detail: PropertiesToolbar = None\n+    defualt_properties = {\n+        \"width\": 100,\n+        \"height\": 100,\n+        \"opacity\": 1,\n+        \"bg_color\": \"red\",\n+    }  # properties add them\n+\n+    def __init__(self) -> None:\n+        pass\n+\n+    # will chanage the propeties to have be if present and invisible if absent !important\n+\n+    def select(\n+        self, width=None, heigth=None, opacity=None, defualt_properties=None, name=None\n+    ):\n+        if defualt_properties == None:\n+            # self.control_name_space,\n+            self.detail.control_width.content.value = width\n+            # self.color_box,\n+            self.detail.control_height.content.value = heigth\n+            self.detail.control_opacity.content.value = opacity\n+            # self.cover_component,\n+        else:\n+            self.detail.control_width.content.value = defualt_properties[\n+                \"width\"\n+            ]  # could change this to use controlrefs instead\n+            self.detail.control_width.content.value = defualt_properties[\"width\"]\n+            self.detail.de\n+            self.detail.control_height.content.content.value = defualt_properties[\n+                \"height\"\n+            ]\n+            self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n+        self.detail.control_name_space.content.value = name\n+\n+        self.detail.update()\n"
                },
                {
                    "date": 1701511514607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,52 +29,12 @@\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_width.content.value = defualt_properties[\"width\"]\n-            self.detail.de\n+            self.du\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n         self.detail.control_name_space.content.value = name\n \n         self.detail.update()\n-from ..UI.Properties_Toolbar import PropertiesToolbar\n-\n-\n-class IManager:\n-    detail: PropertiesToolbar = None\n-    defualt_properties = {\n-        \"width\": 100,\n-        \"height\": 100,\n-        \"opacity\": 1,\n-        \"bg_color\": \"red\",\n-    }  # properties add them\n-\n-    def __init__(self) -> None:\n-        pass\n-\n-    # will chanage the propeties to have be if present and invisible if absent !important\n-\n-    def select(\n-        self, width=None, heigth=None, opacity=None, defualt_properties=None, name=None\n-    ):\n-        if defualt_properties == None:\n-            # self.control_name_space,\n-            self.detail.control_width.content.value = width\n-            # self.color_box,\n-            self.detail.control_height.content.value = heigth\n-            self.detail.control_opacity.content.value = opacity\n-            # self.cover_component,\n-        else:\n-            self.detail.control_width.content.value = defualt_properties[\n-                \"width\"\n-            ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.value = defualt_properties[\"width\"]\n-            self.detail.c\n-            self.detail.control_height.content.content.value = defualt_properties[\n-                \"height\"\n-            ]\n-            self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n-        self.detail.control_name_space.content.value = name\n-\n-        self.detail.update()\n"
                },
                {
                    "date": 1701511520472,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n             self.detail.control_width.content.value = defualt_properties[\"width\"]\n-            self.du\n+            self.defualt_properties.update()\n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511554583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,9 @@\n         else:\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.value = defualt_properties[\"width\"]\n-            self.defualt_properties.update()\n+            \n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511565455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,11 @@\n         else:\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n+            self.detail.control_width.content.\n             \n+            \n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n             ]\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n"
                },
                {
                    "date": 1701511598456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+from ..UI.Properties_Toolbar import PropertiesToolbar\n+\n+\n+class IManager:\n+    detail: PropertiesToolbar = None\n+    defualt_properties = {\n+        \"width\": 100,\n+        \"height\": 100,\n+        \"opacity\": 1,\n+        \"bg_color\": \"red\",\n+    }  # properties add them\n+\n+    def __init__(self) -> None:\n+        pass\n+\n+    # will chanage the propeties to have be if present and invisible if absent !important\n+\n+    def select(\n+        self, width=None, heigth=None, opacity=None, defualt_properties=None, name=None\n+    ):\n+        if defualt_properties == None:\n+            # self.control_name_space,\n+            self.detail.control_width.content.value = width\n+            # self.color_box,\n+            self.detail.control_height.content.value = heigth\n+            self.detail.control_opacity.content.value = opacity\n+            # self.cover_component,\n+        else:\n+            self.detail.control_width.content.value = defualt_properties[\n+                \"width\"\n+            ]  # could change this to use controlrefs instead\n+            self.detail.control_width.content.on\n+            \n+            \n+            self.detail.control_height.content.content.value = defualt_properties[\n+                \"height\"\n+            ]\n+            self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n+        self.detail.control_name_space.content.value = name\n+\n+        self.detail.update()\n"
                },
                {
                    "date": 1701511605558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,10 @@\n     }  # properties add them\n \n     def __init__(self) -> None:\n         pass\n+    \n+    \n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n@@ -28,9 +30,9 @@\n         else:\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.on\n+            self.detail.control_width.content.on_submit=\n             \n             \n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n@@ -38,45 +40,4 @@\n             self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n         self.detail.control_name_space.content.value = name\n \n         self.detail.update()\n-from ..UI.Properties_Toolbar import PropertiesToolbar\n-\n-\n-class IManager:\n-    detail: PropertiesToolbar = None\n-    defualt_properties = {\n-        \"width\": 100,\n-        \"height\": 100,\n-        \"opacity\": 1,\n-        \"bg_color\": \"red\",\n-    }  # properties add them\n-\n-    def __init__(self) -> None:\n-        pass\n-\n-    # will chanage the propeties to have be if present and invisible if absent !important\n-\n-    def select(\n-        self, width=None, heigth=None, opacity=None, defualt_properties=None, name=None\n-    ):\n-        if defualt_properties == None:\n-            # self.control_name_space,\n-            self.detail.control_width.content.value = width\n-            # self.color_box,\n-            self.detail.control_height.content.value = heigth\n-            self.detail.control_opacity.content.value = opacity\n-            # self.cover_component,\n-        else:\n-            self.detail.control_width.content.value = defualt_properties[\n-                \"width\"\n-            ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.\n-            \n-            \n-            self.detail.control_height.content.content.value = defualt_properties[\n-                \"height\"\n-            ]\n-            self.detail.control_opacity.content.value = defualt_properties[\"opacity\"]\n-        self.detail.control_name_space.content.value = name\n-\n-        self.detail.update()\n"
                },
                {
                    "date": 1701511611734,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n     def __init__(self) -> None:\n         pass\n     \n     \n+    def submit(self):\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511617810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,10 @@\n     def __init__(self) -> None:\n         pass\n     \n     \n-    def submit(self):\n+    def submit(self,e):\n+        self.detail.control_width.content.\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511639475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         pass\n     \n     \n     def submit(self,e):\n-        self.detail.control_width.content.\n+        self.detail.control_width.content.value=\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511649334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         pass\n     \n     \n     def submit(self,e):\n-        self.detail.control_width.content.value=\n+        self.deta\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511655418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         pass\n     \n     \n     def submit(self,e):\n-        self.deta\n+        self.defualt_properties.c\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511692289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         pass\n     \n     \n     def submit(self,e):\n-        self.defualt_properties.c\n+        self.defualt_properties.u\n \n     # will chanage the propeties to have be if present and invisible if absent !important\n \n     def select(\n"
                },
                {
                    "date": 1701511745315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         else:\n             self.detail.control_width.content.value = defualt_properties[\n                 \"width\"\n             ]  # could change this to use controlrefs instead\n-            self.detail.control_width.content.on_submit=\n+            self.detail.control_width.content.on_submit=self.s\n             \n             \n             self.detail.control_height.content.content.value = defualt_properties[\n                 \"height\"\n"
                }
            ],
            "date": 1701446983185,
            "name": "Commit-0",
            "content": "from ..UI.Properties_Toolbar import PropertiesToolbar\n\nclass IManager():\n    detail: PropertiesToolbar = None\n    defualt_properties = {\n        'width' : 100,\n        'height' : 100,\n        'opacity' : 1,\n        'bg_color' : 'red',\n    } # properties add them\n\n    def __init__(self) -> None:\n        pass\n\n    # will chanage the propeties to have be if present and invisible if absent !important\n\n    def select(self, width = None, heigth=None, opacity= None, defualt_properties = None, name= None):\n        if defualt_properties == None:\n            # self.control_name_space,\n            self.detail.control_width.content.value = width\n            # self.color_box,\n            self.detail.control_height.content.value = heigth\n            self.detail.control_opacity.content.value = opacity\n            # self.cover_component,\n        else:\n            self.detail.control_width.content.value = defualt_properties['width'] # could change this to use controlrefs instead\n            self.detail.control_height.content.content.value = defualt_properties['height']\n            self.detail.control_opacity.content.value = defualt_properties['opacity']\n        self.detail.control_name_space.content.value = name\n        \n        self.detail.update()"
        }
    ]
}